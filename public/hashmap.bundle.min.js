"use strict";function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function")}}function _defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if("value"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}function _createClass(Constructor,protoProps,staticProps){if(protoProps)_defineProperties(Constructor.prototype,protoProps);if(staticProps)_defineProperties(Constructor,staticProps);return Constructor}var HashMap=function(){function HashMap(capacity){_classCallCheck(this,HashMap);this.capacity=capacity;this.buckets=[]}_createClass(HashMap,[{key:"get",value:function get(key){var index=this.hashFunction(key,this.capacity);if(this.buckets[index]===undefined){return undefined}else{for(var i=0;i<this.buckets[index].length;i++){if(this.buckets[index][i][0]===key){return this.buckets[index][i][1]}}}}},{key:"add",value:function add(key,value){var index=this.hashFunction(key,this.capacity);if(this.buckets[index]===undefined){this.buckets[index]=[[key,value]]}else{var inserted=false;var _iteratorNormalCompletion=true;var _didIteratorError=false;var _iteratorError=undefined;try{for(var _iterator=this.buckets[index][Symbol.iterator](),_step;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=true){var iterator=_step.value;console.log(iterator);if(iterator[0]===key){iterator[1]=value;inserted=true}}}catch(err){_didIteratorError=true;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&_iterator.return!=null){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}if(inserted===false){this.buckets[index].push([key,value])}}}},{key:"remove",value:function remove(){}},{key:"getAll",value:function getAll(){console.log(this.buckets)}},{key:"hashFunction",value:function hashFunction(string,capacity){var hash=0;var _iteratorNormalCompletion2=true;var _didIteratorError2=false;var _iteratorError2=undefined;try{for(var _iterator2=string[Symbol.iterator](),_step2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=true){var char=_step2.value;hash+=string.charCodeAt(char)}}catch(err){_didIteratorError2=true;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&_iterator2.return!=null){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}return hash%capacity}}]);return HashMap}();